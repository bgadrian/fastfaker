// Code generated by make generate DO NOT EDIT.

package faker

import (
	"strconv"
)

type fakerer func(*Faker) string

var templateVariables map[string]fakerer

func init() {
	templateVariables = getTemplateVars()
}

func getTemplateVars() map[string]fakerer {
	vars := make(map[string]fakerer, 100)
	
	vars["avatarurl"] = func(f *Faker) string { return f.AvatarURL() }
	vars["beeralcohol"] = func(f *Faker) string { return f.BeerAlcohol() }
	vars["beerblg"] = func(f *Faker) string { return f.BeerBlg() }
	vars["beerhop"] = func(f *Faker) string { return f.BeerHop() }
	vars["beeribu"] = func(f *Faker) string { return f.BeerIbu() }
	vars["beermalt"] = func(f *Faker) string { return f.BeerMalt() }
	vars["beername"] = func(f *Faker) string { return f.BeerName() }
	vars["beerstyle"] = func(f *Faker) string { return f.BeerStyle() }
	vars["beeryeast"] = func(f *Faker) string { return f.BeerYeast() }
	vars["binary"] = func(f *Faker) string { return f.Binary() }
	vars["booltext"] = func(f *Faker) string { return f.BoolText() }
	vars["browser"] = func(f *Faker) string { return f.Browser() }
	vars["bs"] = func(f *Faker) string { return f.BS() }
	vars["buzzword"] = func(f *Faker) string { return f.BuzzWord() }
	vars["carmaker"] = func(f *Faker) string { return f.CarMaker() }
	vars["carmodel"] = func(f *Faker) string { return f.CarModel() }
	vars["chromeuseragent"] = func(f *Faker) string { return f.ChromeUserAgent() }
	vars["city"] = func(f *Faker) string { return f.City() }
	vars["color"] = func(f *Faker) string { return f.Color() }
	vars["company"] = func(f *Faker) string { return f.Company() }
	vars["companysuffix"] = func(f *Faker) string { return f.CompanySuffix() }
	vars["country"] = func(f *Faker) string { return f.Country() }
	vars["countryabr"] = func(f *Faker) string { return f.CountryAbr() }
	vars["creditcardcvv"] = func(f *Faker) string { return f.CreditCardCvv() }
	vars["creditcardexp"] = func(f *Faker) string { return f.CreditCardExp() }
	vars["creditcardnumber"] = func(f *Faker) string { return strconv.Itoa(f.CreditCardNumber()) }
	vars["creditcardnumberluhn"] = func(f *Faker) string { return strconv.Itoa(f.CreditCardNumberLuhn()) }
	vars["creditcardtype"] = func(f *Faker) string { return f.CreditCardType() }
	vars["currencylong"] = func(f *Faker) string { return f.CurrencyLong() }
	vars["currencyshort"] = func(f *Faker) string { return f.CurrencyShort() }
	vars["datecurrentyearstr"] = func(f *Faker) string { return f.DateCurrentYearStr() }
	vars["datestr"] = func(f *Faker) string { return f.DateStr() }
	vars["day"] = func(f *Faker) string { return strconv.Itoa(f.Day()) }
	vars["digit"] = func(f *Faker) string { return f.Digit() }
	vars["domainname"] = func(f *Faker) string { return f.DomainName() }
	vars["domainsuffix"] = func(f *Faker) string { return f.DomainSuffix() }
	vars["email"] = func(f *Faker) string { return f.Email() }
	vars["extension"] = func(f *Faker) string { return f.Extension() }
	vars["firefoxuseragent"] = func(f *Faker) string { return f.FirefoxUserAgent() }
	vars["firstname"] = func(f *Faker) string { return f.FirstName() }
	vars["float32"] = func(f *Faker) string { return strconv.FormatFloat(float64(f.Float32()), 103, -1, 32) }
	vars["float64"] = func(f *Faker) string { return strconv.FormatFloat(f.Float64(), 103, -1, 64) }
	vars["float64unary"] = func(f *Faker) string { return strconv.FormatFloat(f.Float64Unary(), 103, -1, 64) }
	vars["fueltype"] = func(f *Faker) string { return f.FuelType() }
	vars["gender"] = func(f *Faker) string { return f.Gender() }
	vars["hackerabbreviation"] = func(f *Faker) string { return f.HackerAbbreviation() }
	vars["hackeradjective"] = func(f *Faker) string { return f.HackerAdjective() }
	vars["hackeringverb"] = func(f *Faker) string { return f.HackerIngverb() }
	vars["hackernoun"] = func(f *Faker) string { return f.HackerNoun() }
	vars["hackerphrase"] = func(f *Faker) string { return f.HackerPhrase() }
	vars["hackerverb"] = func(f *Faker) string { return f.HackerVerb() }
	vars["hexcolor"] = func(f *Faker) string { return f.HexColor() }
	vars["hipsterparagraphavg"] = func(f *Faker) string { return f.HipsterParagraphAvg() }
	vars["hipstersentenceavg"] = func(f *Faker) string { return f.HipsterSentenceAvg() }
	vars["hipsterword"] = func(f *Faker) string { return f.HipsterWord() }
	vars["hour"] = func(f *Faker) string { return strconv.Itoa(f.Hour()) }
	vars["httpmethod"] = func(f *Faker) string { return f.HTTPMethod() }
	vars["int16"] = func(f *Faker) string { return strconv.Itoa(int(f.Int16())) }
	vars["int32"] = func(f *Faker) string { return strconv.Itoa(int(f.Int32())) }
	vars["int64"] = func(f *Faker) string { return strconv.Itoa(int(f.Int64())) }
	vars["int64positive"] = func(f *Faker) string { return strconv.Itoa(int(f.Int64Positive())) }
	vars["int8"] = func(f *Faker) string { return strconv.Itoa(int(f.Int8())) }
	vars["ipv4address"] = func(f *Faker) string { return f.IPv4Address() }
	vars["ipv6address"] = func(f *Faker) string { return f.IPv6Address() }
	vars["jobdescriptor"] = func(f *Faker) string { return f.JobDescriptor() }
	vars["joblevel"] = func(f *Faker) string { return f.JobLevel() }
	vars["jobtitle"] = func(f *Faker) string { return f.JobTitle() }
	vars["language"] = func(f *Faker) string { return f.Language() }
	vars["languageabbreviation"] = func(f *Faker) string { return f.LanguageAbbreviation() }
	vars["lastname"] = func(f *Faker) string { return f.LastName() }
	vars["latitude"] = func(f *Faker) string { return strconv.FormatFloat(f.Latitude(), 103, -1, 64) }
	vars["letter"] = func(f *Faker) string { return f.Letter() }
	vars["longitude"] = func(f *Faker) string { return strconv.FormatFloat(f.Longitude(), 103, -1, 64) }
	vars["macaddress"] = func(f *Faker) string { return f.MacAddress() }
	vars["md5"] = func(f *Faker) string { return f.MD5() }
	vars["mimetype"] = func(f *Faker) string { return f.MimeType() }
	vars["minute"] = func(f *Faker) string { return strconv.Itoa(f.Minute()) }
	vars["month"] = func(f *Faker) string { return f.Month() }
	vars["name"] = func(f *Faker) string { return f.Name() }
	vars["nameprefix"] = func(f *Faker) string { return f.NamePrefix() }
	vars["namesuffix"] = func(f *Faker) string { return f.NameSuffix() }
	vars["nanosecond"] = func(f *Faker) string { return strconv.Itoa(f.NanoSecond()) }
	vars["operauseragent"] = func(f *Faker) string { return f.OperaUserAgent() }
	vars["paragraphavg"] = func(f *Faker) string { return f.ParagraphAvg() }
	vars["passwordfull"] = func(f *Faker) string { return f.PasswordFull() }
	vars["phone"] = func(f *Faker) string { return f.Phone() }
	vars["phoneformatted"] = func(f *Faker) string { return f.PhoneFormatted() }
	vars["programminglanguage"] = func(f *Faker) string { return f.ProgrammingLanguage() }
	vars["question"] = func(f *Faker) string { return f.Question() }
	vars["quote"] = func(f *Faker) string { return f.Quote() }
	vars["safariuseragent"] = func(f *Faker) string { return f.SafariUserAgent() }
	vars["safecolor"] = func(f *Faker) string { return f.SafeColor() }
	vars["second"] = func(f *Faker) string { return strconv.Itoa(f.Second()) }
	vars["sentenceavg"] = func(f *Faker) string { return f.SentenceAvg() }
	vars["sha256"] = func(f *Faker) string { return f.SHA256() }
	vars["simplestatuscode"] = func(f *Faker) string { return strconv.Itoa(f.SimpleStatusCode()) }
	vars["ssn"] = func(f *Faker) string { return f.SSN() }
	vars["state"] = func(f *Faker) string { return f.State() }
	vars["stateabr"] = func(f *Faker) string { return f.StateAbr() }
	vars["statuscode"] = func(f *Faker) string { return strconv.Itoa(f.StatusCode()) }
	vars["street"] = func(f *Faker) string { return f.Street() }
	vars["streetname"] = func(f *Faker) string { return f.StreetName() }
	vars["streetnumber"] = func(f *Faker) string { return f.StreetNumber() }
	vars["streetprefix"] = func(f *Faker) string { return f.StreetPrefix() }
	vars["streetsuffix"] = func(f *Faker) string { return f.StreetSuffix() }
	vars["timezone"] = func(f *Faker) string { return f.TimeZone() }
	vars["timezoneabv"] = func(f *Faker) string { return f.TimeZoneAbv() }
	vars["timezonefull"] = func(f *Faker) string { return f.TimeZoneFull() }
	vars["timezoneoffset"] = func(f *Faker) string { return strconv.FormatFloat(float64(f.TimeZoneOffset()), 103, -1, 32) }
	vars["transmissiongeartype"] = func(f *Faker) string { return f.TransmissionGearType() }
	vars["uint16"] = func(f *Faker) string { return strconv.Itoa(int(f.Uint16())) }
	vars["uint32"] = func(f *Faker) string { return strconv.Itoa(int(f.Uint32())) }
	vars["uint64"] = func(f *Faker) string { return strconv.Itoa(int(f.Uint64())) }
	vars["uint8"] = func(f *Faker) string { return strconv.Itoa(int(f.Uint8())) }
	vars["url"] = func(f *Faker) string { return f.URL() }
	vars["useragent"] = func(f *Faker) string { return f.UserAgent() }
	vars["username"] = func(f *Faker) string { return f.Username() }
	vars["uuid"] = func(f *Faker) string { return f.UUID() }
	vars["vehicletype"] = func(f *Faker) string { return f.VehicleType() }
	vars["weekday"] = func(f *Faker) string { return f.WeekDay() }
	vars["word"] = func(f *Faker) string { return f.Word() }
	vars["year"] = func(f *Faker) string { return strconv.Itoa(f.Year()) }
	vars["zip"] = func(f *Faker) string { return f.Zip() }
	
	return vars
}// Code generated by make generate DO NOT EDIT.

